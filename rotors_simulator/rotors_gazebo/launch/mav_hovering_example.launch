
	<launch>
		<arg name="mav_name" default="firefly"/>
		<arg name="world_name" default="basic"/>
		<arg name="enable_logging" default="false" />
		<arg name="enable_ground_truth" default="true" />
		<arg name="log_file" default="$(arg mav_name)" />
		<arg name="paused" value="true"/>
		<arg name="model2" default="$(find rotors_description)/urdf/$(arg mav_name)_base.xacro"/>
		<arg name="enable_mavlink_interface" default="false"/>
		<env name="GAZEBO_MODEL_PATH" value="$(find rotors_gazebo)/models"/>
		<include file="$(find gazebo_ros)/launch/empty_world.launch">
			<arg name="world_name" value="$(find rotors_gazebo)/worlds/$(arg world_name).world" />
			<arg name="paused" value="$(arg paused)"/>
		</include>
		<param name="robot_description" command=" $(find xacro)/xacro.py '$(arg model2)' enable_logging:=$(arg enable_logging) enable_ground_truth:=$(arg enable_ground_truth)
			enable_mavlink_interface:=$(arg enable_mavlink_interface) log_file:=$(arg log_file) mav_name:=/" />
		
		<group ns="$(arg mav_name)">
			<include file="$(find rotors_gazebo)/launch/spawn_mav.launch">
				<arg name="mav_name" value="$(arg mav_name)" />
				<arg name="model" value="$(find rotors_description)/urdf/mav_generic_odometry_sensor.gazebo" />
				<arg name="enable_logging" value="$(arg enable_logging)" />
				<arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
				<arg name="log_file" value="$(arg log_file)"/>
			</include>
			<node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
				<rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_$(arg mav_name).yaml" />
				<rosparam command="load" file="$(find rotors_gazebo)/resource/$(arg mav_name).yaml" />
				<remap from="odometry" to="odometry_sensor1/odometry" />
			</node>
			<node name="hovering_example" pkg="rotors_gazebo" type="hovering_example" output="screen"/>
			
			<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"	respawn="false" output="screen">
				<remap from="/joint_states" to="/$(arg mav_name)/joint_states" />
			</node>
			<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
		</group>
		
		<!-- Load joint controller configurations from YAML file to parameter server -->
		<rosparam file="$(find rotors_gazebo)/rrbot_control.yaml" command="load"/>
		
	</launch>
